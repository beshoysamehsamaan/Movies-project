@model Get_Movies.Models.User
@using (Html.BeginForm("Editprofile", "Users", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "login100-form validate-form" }))
{
    <span class="login100-form-title p-b-59">
        Edit Profile
    </span>

    <div class="container-login100-form-btn" style="display:inline-block;width:48%;text-align:center">
        <div class="wrap-login100-form-btn">
            <div class="login100-form-bgbtn"></div>
            <button class="login100-form-btn" type="submit" name="submit" value="watchHistory" style="text-align:center;">
                <a href=@Url.Action("WatchHistory")>Watch your History</a>
            </button>
        </div>
    </div>



    if (ViewBag.usernameOrEmailExists == 0)
    {<div style="color:green">Updated Successfully</div>}
    if (ViewBag.usernameOrEmailExists == 1)
    {
        <div style="color:green">Email or Username Exists</div>
    }

    <div class="wrap-input100 validate-input" data-validate="First Name is required">
        <span class="label-input100">First Name</span>
        @Html.TextBoxFor(u => u.First_Name, new { @class = "input100", Name = "first_name" })
        <span class="focus-input100"></span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Last Name is required">
        <span class="label-input100">Last Name</span>
        @Html.TextBoxFor(u => u.Last_Name, new { @class = "input100", Name = "last_name" })
        <span class="focus-input100"></span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
        <span class="label-input100">Email</span>
        @Html.TextBoxFor(u => u.Email, new { @class = "input100", Name = "email" })
        <span class="focus-input100"></span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Username is required">
        <span class="label-input100">Username</span>
        @Html.TextBoxFor(u => u.Username, new { @class = "input100", Name = "username" })
        <span class="focus-input100"></span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Password is required">
        <span class="label-input100">Password</span>
        @Html.TextBoxFor(u => u.Password, new { @class = "input100", Name = "password" })
        <span class="focus-input100"></span>
    </div>

    <div class="wrap-input100 validate-input" data-validate="Valid Link Photo is required: ex abc.xyz">
        <span class="label-input100">Link Your Photo</span>
        @Html.TextBoxFor(u => u.Profile_Picture, new { @class = "input100", Name = "profile_picture" })
        <span class="focus-input100"></span>
    </div>

    <div class="container-login100-form-btn" style="display:inline-block;width:48%;margin:0px 1%;padding:0px;text-align:center;min-width:20px">
        <div class="wrap-login100-form-btn">
            <div class="login100-form-bgbtn"></div>
            <button class="login100-form-btn" type="submit" name="submit" value="update" style="text-align:center;">
                Submit
            </button>
        </div>
    </div>
    <div class="container-login100-form-btn" style="display:inline-block;width:48%;margin:0px 1%;padding:0px;text-align:center;min-width:20px">
        <div class="wrap-login100-form-btn">
            <div class="login100-form-bgbtn"></div>
            <button class="login100-form-btn" type="submit" name="submit" value="deleteProfile" style="text-align:center;">
                Delete Profile
            </button>
        </div>
    </div>

}
